#!/usr/bin/perl


#input: an mrc file with N wavelengths, and the wave# of foci to count
#output:  CopyRegion commands to perform:
#    - keeping only the relevant wavelengths
#    - writing to short (signed integer) mode
#    - writing two files if #Zsec is 50 or over
#20160501 May Day, pmc

use POSIX;
$RW=pop(@ARGV)-1;
die("You must enter the wavelength# (starting at zero) of the foci!") unless ($RW>=0 && $RW <5);

foreach $finname(@ARGV) {
open IN,$finname or die "Couldn't find $finname !";

$br=read(IN,$hdr,1024);
close IN;

if($br != 1024){die "jacked!!!";}

$endi = "undefined";
($ncol, $nrow, $nsecs, $pixtype, $mxst, $myst, $mzst, $mx, $my, $mz,
  $dx,$dy,$dz,$alpha,$beta,$gamma,$colax,$rowax,$secax,$min,$max,$mean,
  $nspg, $next, $dvid, $nblank, $ntst, $blank, $numints, $numfloats, $sub,
  $zfac, $min2, $max2, $min3, $max3, $min4, $max4, $imtype, $lensnum,
  $n1, $n2, $v1, $v2, $min5, $max5, $ntimes, $imgseq, $xtilt, $ytilt, $ztilt,
  $nwaves, $wv1, $wv2, $wv3, $wv4, $wv5, $z0, $x0, $y0, $ntitles,
  $t1, $t2, $t3, $t4, $t5, $t6, $t7, $t8, $t9, $t10) = unpack (
  "l>l>l>l>l>l>l>l>l>l>f>f>f>f>f>f>l>l>l>f>f>f>l>l>s>s>l>A24s>s>s>s>f>f>f>f>f>f>s>s>s>s>s>s>f>f>s>s>f>f>f>s>s>s>s>s>s>f>f>f>l>A80A80A80A80A80A80A80A80A80A80",$hdr);

if($pixtype >=0 && $pixtype<7) {$endi="ieee-be";}

else {
#    print ("trying little-endian...");
($ncol, $nrow, $nsecs, $pixtype, $mxst, $myst, $mzst, $mx, $my, $mz,
  $dx,$dy,$dz,$alpha,$beta,$gamma,$colax,$rowax,$secax,$min,$max,$mean,
  $nspg, $next, $dvid, $nblank, $ntst, $blank, $numints, $numfloats, $sub,
  $zfac, $min2, $max2, $min3, $max3, $min4, $max4, $imtype, $lensnum,
  $n1, $n2, $v1, $v2, $min5, $max5, $ntimes, $imgseq, $xtilt, $ytilt, $ztilt,
  $nwaves, $wv1, $wv2, $wv3, $wv4, $wv5, $z0, $x0, $y0, $ntitles,
  $t1, $t2, $t3, $t4, $t5, $t6, $t7, $t8, $t9, $t10) = unpack (
  "l<l<l<l<l<l<l<l<l<l<f<f<f<f<f<f<l<l<l<f<f<f<l<l<s<s<l<A24s<s<s<s<f<f<f<f<f<f<s<s<s<s<s<s<f<f<s<s<f<f<f<s<s<s<s<s<s<f<f<f<l<A80A80A80A80A80A80A80A80A80A80",$hdr);
if($pixtype >=0 && $pixtype<7) {$endi="ieee-le";}
else {die ("failed: pixtype is $pixtype, and endian is $endi")};
}

#print "Read success: pixtype is $dtypes[$pixtype], endian is $endi\n";

$nZsecs=$nsecs/$nwaves;
$writenZsecs=$nZsecs-1;
if($nZsecs >= 100) {
    $fth=int($nZsecs/3);
    $writefth=$fth-1;
    $writesth=$fth+$fth-1;
    $sth=$fth+$fth;
    print "CopyRegion $finname $finname.1st -mode=short -w=0:$RW -z=0:$writefth \n";
    print "CopyRegion $finname $finname.2nd -mode=short -w=0:$RW -z=$fth:$writesth \n";
    print "CopyRegion $finname $finname.3rd -mode=short -w=0:$RW -z=$sth:$writenZsecs \n";
}
elsif($nZsecs >= 50) {
    $fh=int($nZsecs/2);
    $writefh=$fh-1;
    print "CopyRegion $finname $finname.1st -mode=short -w=0:$RW -z=0:$writefh \n";
    print "CopyRegion $finname $finname.2nd -mode=short -w=0:$RW -z=$fh:$writenZsecs \n";
} else {
    print "CopyRegion $finname $finname.all -mode=short -w=0:$RW \n";
}

}
